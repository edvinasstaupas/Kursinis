import matplotlib.pyplot as plt
import numpy as np

RNQR=("RNQR", np.array([0.9396, 0.9316, 0.9208, 0.9218, 0.9288, 0.9254, 0.9077, 0.909, 0.905, 0.9014, 0.8919, 0.8913, 0.8863, 0.8823, 0.881, 0.8749, 0.8809, 0.8821, 0.8624, 0.8637, 0.8698, 0.8624, 0.8548, 0.8586, 0.8586, 0.875, 0.8621, 0.8638, 0.8619, 0.8483, 0.8383, 0.849, 0.8447, 0.8448, 0.8784, 0.8491, 0.8468, 0.8351, 0.8384, 0.8327, 0.8284, 0.8395, 0.8297, 0.8419, 0.8334, 0.8452, 0.84, 0.8494, 0.8472, 0.83, 0.8301, 0.8308, 0.8384, 0.84, 0.835, 0.8314, 0.8266, 0.8281, 0.8313, 0.8291, 0.8272, 0.8268, 0.8396, 0.8278, 0.84, 0.8278, 0.838, 0.8333, 0.8264, 0.831, 0.826, 0.8324, 0.8235, 0.8274]),np.array([0.9246, 0.922, 0.9172, 0.9114, 0.9093, 0.9099, 0.9073, 0.904, 0.8987, 0.8949, 0.8903, 0.8859, 0.8805, 0.8765, 0.8732, 0.8657, 0.8625, 0.8557, 0.8488, 0.8457, 0.8367, 0.8299, 0.8233, 0.8144, 0.8049, 0.799, 0.7937, 0.786, 0.7745, 0.7691, 0.7595, 0.7509, 0.7407, 0.7298, 0.7248, 0.7103, 0.7026, 0.695, 0.6833, 0.6712, 0.6646, 0.6535, 0.642, 0.6317, 0.6215, 0.6094, 0.6001, 0.5887, 0.5784, 0.5696, 0.5569, 0.5493, 0.5395, 0.531, 0.5156, 0.5059, 0.5005, 0.4914, 0.4816, 0.4722, 0.4611, 0.45, 0.4383, 0.4375, 0.4278, 0.4217, 0.4133, 0.3989, 0.3963, 0.3867, 0.3862, 0.3754, 0.3704, 0.3578]))

RNS=("RNS", np.array([0.9663, 0.979, 0.9763, 0.7408, 0.9701, 0.9465, 0.9524, 0.9715, 0.971, 0.9666, 0.967, 0.95, 0.9647, 0.9691, 0.9705, 0.972, 0.9688, 0.9713, 0.9776, 0.9752, 0.9719, 0.9744, 0.9736, 0.972, 0.9705, 0.9706, 0.9706, 0.9747, 0.9715, 0.9713, 0.9748, 0.9718, 0.9707, 0.9728, 0.9762, 0.9729, 0.9721, 0.9756, 0.97, 0.9719, 0.9714, 0.9718, 0.9736, 0.9712, 0.9699, 0.9699, 0.9679, 0.9702, 0.9705, 0.9713, 0.9713, 0.9695, 0.9731, 0.9686, 0.972, 0.9684, 0.9726, 0.9721, 0.971, 0.9705, 0.9703, 0.9764, 0.9722, 0.9692, 0.9738, 0.9751, 0.9722, 0.9744, 0.9725, 0.9714, 0.9707, 0.9735, 0.9735, 0.973, 0.9744, 0.9733, 0.9763, 0.9744, 0.9772, 0.9748, 0.9739, 0.9748, 0.9774, 0.9752, 0.9746, 0.9736, 0.9752, 0.9742, 0.9724, 0.9738, 0.973, 0.974, 0.9731, 0.9716, 0.9731, 0.9751, 0.9761, 0.9773, 0.9772, 0.9756]),np.array([0.9029, 0.8639, 0.9247, 0.9198, 0.9202, 0.9195, 0.9227, 0.92, 0.9164, 0.9145, 0.9114, 0.9111, 0.9109, 0.9085, 0.9078, 0.9089, 0.9069, 0.9048, 0.9052, 0.904, 0.9025, 0.9017, 0.9009, 0.8995, 0.8991, 0.8962, 0.8942, 0.893, 0.8906, 0.8882, 0.8847, 0.8833, 0.881, 0.8767, 0.872, 0.8668, 0.861, 0.8528, 0.8449, 0.8331, 0.823, 0.8091, 0.7979, 0.7811, 0.7649, 0.7447, 0.7289, 0.7115, 0.6931, 0.6784, 0.6595, 0.6418, 0.6286, 0.6135, 0.5997, 0.5862, 0.5757, 0.56, 0.5497, 0.5375, 0.5291, 0.5211, 0.51, 0.5054, 0.4937, 0.4877, 0.4823, 0.4741, 0.4673, 0.4622, 0.4537, 0.4512, 0.445, 0.4376, 0.4366, 0.4301, 0.4244, 0.421, 0.4181, 0.4105, 0.4095, 0.4051, 0.4007, 0.4013, 0.3941, 0.3914, 0.3894, 0.3867, 0.3819, 0.3767, 0.3756, 0.3734, 0.3719, 0.3691, 0.3639, 0.3625, 0.361, 0.3569, 0.3558, 0.3528]))

RNN=("RNN", np.array([0.2323, 0.1626, 0.1733, 0.0927, 0.0842, 0.0841, 0.0476, 0.055, 0.04, 0.0489, 0.0578, 0.0666]),np.array([0.2631, 0.1236, 0.0986, 0.0878, 0.0869, 0.0705, 0.0583, 0.0604, 0.0478, 0.0512, 0.041, 0.046]))

RNT=("RNT", np.array([0.9271, 0.9328, 0.9269, 0.9252, 0.9226, 0.9208, 0.9146, 0.9147, 0.9091, 0.9079, 0.9106, 0.9038, 0.904, 0.9025, 0.8944, 0.9007, 0.8934, 0.8917, 0.8913, 0.8877, 0.8818, 0.8778, 0.8695, 0.8779, 0.8763, 0.8735, 0.8652, 0.8677, 0.8616, 0.8667, 0.866, 0.8636, 0.8644, 0.8619, 0.8582, 0.8634, 0.8611, 0.8636, 0.8661, 0.8606, 0.8599, 0.8626, 0.8622, 0.8681, 0.8715, 0.8666, 0.8612, 0.8685, 0.8667, 0.8617, 0.8618, 0.8629, 0.8622, 0.8666, 0.8653, 0.8681, 0.8659, 0.8614, 0.8657, 0.8588, 0.8629, 0.8598, 0.8636, 0.8614, 0.8641, 0.8649, 0.857, 0.8631, 0.8609, 0.8647, 0.8559, 0.8611, 0.8632, 0.8611, 0.8572, 0.8648, 0.8617, 0.8629, 0.8594, 0.8585, 0.8566, 0.8567, 0.8563, 0.8617, 0.8579]),np.array([0.9306, 0.9287, 0.9231, 0.9227, 0.9219, 0.9193, 0.9154, 0.9122, 0.9105, 0.908, 0.9044, 0.902, 0.899, 0.8959, 0.8918, 0.8875, 0.8833, 0.8802, 0.8743, 0.8698, 0.8629, 0.8562, 0.8494, 0.8445, 0.8406, 0.8308, 0.8243, 0.8199, 0.8104, 0.8031, 0.7925, 0.7822, 0.7727, 0.7624, 0.754, 0.7394, 0.73, 0.7183, 0.7053, 0.692, 0.6838, 0.6676, 0.6564, 0.6462, 0.6338, 0.6205, 0.6126, 0.6041, 0.5923, 0.581, 0.5731, 0.5647, 0.5513, 0.5469, 0.5387, 0.5312, 0.5208, 0.5149, 0.5116, 0.499, 0.4915, 0.4899, 0.4835, 0.476, 0.4739, 0.4625, 0.4597, 0.4543, 0.4471, 0.4401, 0.4424, 0.4336, 0.4332, 0.4314, 0.4237, 0.418, 0.42, 0.4136, 0.4098, 0.4034, 0.4043, 0.3987, 0.3936, 0.3921, 0.3816]))

RNF=("RNF", np.array([0.9072, 0.9205, 0.9239, 0.9167, 0.9242, 0.9176, 0.9224, 0.9133, 0.9225, 0.915, 0.9184, 0.9037, 0.9034, 0.9022, 0.904, 0.8928, 0.909, 0.9057, 0.8947, 0.8817, 0.8836, 0.8826, 0.8884, 0.8728, 0.8737, 0.8793, 0.874, 0.8753, 0.8654, 0.8572, 0.8756, 0.8569, 0.8512, 0.8466, 0.8503, 0.8639, 0.8668, 0.8501, 0.8386, 0.8239, 0.8368, 0.8258, 0.8207, 0.856, 0.8204, 0.8203, 0.8266, 0.8496, 0.8296, 0.807, 0.8181, 0.8087, 0.804, 0.7968, 0.8001, 0.8182, 0.7962, 0.8009, 0.8224, 0.7808, 0.792, 0.7844, 0.7921, 0.7892, 0.7893, 0.7795, 0.7865, 0.7888, 0.7762, 0.7976, 0.7778, 0.7758, 0.7715, 0.7788, 0.8403, 0.7738, 0.783, 0.7695, 0.767, 0.7679, 0.77, 0.7751, 0.7716, 0.7634, 0.7746, 0.7703, 0.767, 0.7634, 0.771, 0.7636, 0.7745, 0.7574, 0.7572, 0.7656, 0.7536, 0.7568, 0.7626, 0.7544, 0.7588, 0.7539]),np.array([0.9239, 0.9208, 0.9188, 0.9166, 0.9174, 0.9186, 0.9157, 0.9113, 0.9153, 0.9123, 0.9082, 0.9042, 0.897, 0.8938, 0.897, 0.8884, 0.8903, 0.8891, 0.8907, 0.8818, 0.8797, 0.8721, 0.8684, 0.8701, 0.8595, 0.8583, 0.8543, 0.8657, 0.8506, 0.8458, 0.845, 0.839, 0.8343, 0.8367, 0.8286, 0.8262, 0.8141, 0.8243, 0.8151, 0.7964, 0.7971, 0.7924, 0.7819, 0.8028, 0.7875, 0.7716, 0.7618, 0.7552, 0.7492, 0.7498, 0.7419, 0.7365, 0.7277, 0.7221, 0.7048, 0.7124, 0.6935, 0.6877, 0.6872, 0.6699, 0.6702, 0.653, 0.6576, 0.6728, 0.6291, 0.6229, 0.6224, 0.6053, 0.6081, 0.5911, 0.5884, 0.5825, 0.5868, 0.5692, 0.5476, 0.5564, 0.5498, 0.5418, 0.5334, 0.5114, 0.5224, 0.5208, 0.5016, 0.5014, 0.4902, 0.4804, 0.4781, 0.4767, 0.4715, 0.4612, 0.4501, 0.4565, 0.4453, 0.4342, 0.4408, 0.4337, 0.4331, 0.4219, 0.4155, 0.4195]))

RNQC=("RNQC", np.array([0.9481, 0.9662, 0.9629, 0.9753, 0.9854, 0.9671, 0.9573, 0.968, 0.9542, 0.9665, 0.9506, 0.9715, 0.9468, 0.9484, 0.9688, 0.959, 0.9514, 0.9569, 0.9718, 0.9507, 0.9755, 0.9698, 0.9597, 0.9554, 0.9721, 0.9729, 0.9749, 0.9459, 0.9266, 0.9203, 0.9585, 0.9704, 0.9661, 0.956, 0.9587, 0.9652, 0.9701, 0.9637, 0.9497, 0.9739, 0.9683, 0.9622, 0.9653, 0.9797, 0.9655]),np.array([0.9202, 0.9261, 0.9097, 0.8963, 0.8873, 0.8791, 0.8701, 0.8602, 0.8521, 0.8431, 0.8339, 0.8252, 0.8141, 0.8057, 0.7947, 0.7853, 0.7749, 0.7654, 0.7559, 0.7445, 0.7319, 0.7217, 0.7075, 0.6957, 0.6838, 0.6713, 0.658, 0.6437, 0.6321, 0.6175, 0.6076, 0.5946, 0.5822, 0.5691, 0.5572, 0.5448, 0.5322, 0.5199, 0.5117, 0.4992, 0.487, 0.4816, 0.4673, 0.4565, 0.45]))

ViTT=("ViTT", np.array([0.9979, 0.9725, 0.9612, 0.9853, 0.9587, 0.9813, 0.951, 0.951, 0.9495, 0.9482, 0.9994, 0.9992, 0.9949, 0.9855, 0.9586, 0.9526, 0.9514, 0.9512, 0.9582, 0.95, 0.9597, 0.983, 0.9997, 0.9564, 0.9678, 0.994, 0.9465, 0.949, 0.9488, 0.9804, 0.948, 0.9479, 1.0032, 0.9518, 0.9506, 0.9503, 0.9588, 0.9531, 0.9508, 0.9542, 0.9481, 0.9539, 0.9901, 0.9521, 0.9471, 0.9965, 0.9602, 0.9531, 0.9541, 0.9567]),np.array([0.9904, 0.9833, 0.9738, 0.9853, 0.9692, 0.9663, 0.9568, 0.9602, 0.9581, 0.956, 0.9952, 0.9871, 0.9917, 0.9838, 0.9617, 0.9783, 0.9562, 0.9543, 0.9756, 0.9582, 0.9565, 0.9604, 0.9781, 0.9895, 0.9658, 0.9661, 0.9681, 0.9749, 0.9551, 0.9641, 0.9598, 0.9531, 0.9562, 0.9814, 0.956, 0.952, 0.9666, 0.9559, 0.957, 0.9524, 0.9515, 0.9759, 0.9721, 0.9552, 0.9583, 0.9754, 0.9732, 0.9629, 0.9549, 0.9573]))

ViTN=("ViTN", np.array([0.4251, 0.3499, 0.3687, 0.3271, 0.3234, 0.3095, 0.2787, 0.3116, 0.2436, 0.2445, 0.2207, 0.2226, 0.234, 0.2229, 0.3267, 0.2479, 0.217, 0.2872, 0.2104, 0.1805, 0.211, 0.1835, 0.1939, 0.1687, 0.2544, 0.2422, 0.1669, 0.1631, 0.1466, 0.1513, 0.1629, 0.56, 0.1388, 0.1707, 0.126, 0.1465, 0.1521, 0.2502, 0.1351, 0.1387, 0.1542, 0.1235, 0.1488, 0.1401, 0.1331, 0.1166, 0.1308, 0.1413, 0.1218, 0.1286, 0.1227, 0.1241, 0.1333, 0.1776, 0.1389, 0.1138, 0.1167, 0.1098, 0.1185, 0.109, 0.1011, 0.1017, 0.0969, 0.1187, 0.1131, 0.1008, 0.1142, 0.1401, 0.1323, 0.1003, 0.0994, 0.1034, 0.1031, 0.1061, 0.1007, 0.102, 0.1019, 0.1089, 0.1119, 0.1062, 0.115, 0.1072, 0.1151, 0.1064, 0.0986, 0.1167, 0.1473, 0.0909, 0.0971, 0.1499, 0.104, 0.0877, 0.0848, 0.1195, 0.0981, 0.0942, 0.0931, 0.1056, 0.0984, 0.0944]),np.array([0.5901, 0.4278, 0.3802, 0.3919, 0.3321, 0.3175, 0.3068, 0.3002, 0.2763, 0.2679, 0.2606, 0.2616, 0.2325, 0.2111, 0.234, 0.2084, 0.1909, 0.2257, 0.2299, 0.1808, 0.199, 0.1974, 0.1913, 0.1708, 0.1619, 0.1965, 0.1798, 0.1498, 0.1287, 0.1558, 0.1519, 0.1395, 0.1498, 0.1122, 0.1142, 0.1073, 0.139, 0.1139, 0.1183, 0.094, 0.1086, 0.0948, 0.0863, 0.0999, 0.0973, 0.0892, 0.0785, 0.1022, 0.0806, 0.0798, 0.0912, 0.0715, 0.0772, 0.0771, 0.0709, 0.0638, 0.0775, 0.0738, 0.0716, 0.0552, 0.0535, 0.057, 0.0801, 0.0509, 0.0509, 0.05, 0.0614, 0.0464, 0.0649, 0.0479, 0.0474, 0.045, 0.0397, 0.0729, 0.0439, 0.0466, 0.045, 0.0358, 0.0446, 0.0355, 0.0428, 0.0365, 0.0449, 0.0453, 0.0335, 0.0392, 0.0424, 0.0381, 0.0254, 0.0342, 0.0363, 0.0343, 0.0302, 0.0726, 0.046, 0.0271, 0.026, 0.0255, 0.0274, 0.0356]))

ViTQR=("ViTQR", np.array([0.9814, 0.9697, 0.9681, 0.9678, 0.9699, 0.9653, 0.9663, 0.9658, 0.9662, 0.9655, 0.9731, 0.9651, 0.9702, 0.9644, 0.9674, 0.9637, 0.9637, 0.9638, 0.9636, 0.9644, 0.964, 0.9639, 0.9631, 0.9645, 0.9649, 0.9646, 0.9791, 0.9681, 0.9684, 0.969, 0.9888, 0.9654, 0.9674, 0.9642, 0.9649, 0.9647, 0.9644, 0.9639, 0.9663, 0.9644]),np.array([0.9866, 0.9814, 0.9794, 0.9681, 0.9777, 0.9662, 0.9658, 0.9652, 0.9653, 0.9736, 0.9673, 0.968, 0.9667, 0.9651, 0.9667, 0.9662, 0.9643, 0.9643, 0.9637, 0.9646, 0.9635, 0.9644, 0.9645, 0.9639, 0.9647, 0.9656, 0.9676, 0.9824, 0.9725, 0.9685, 0.9786, 0.9686, 0.9757, 0.9659, 0.9647, 0.9653, 0.9642, 0.9645, 0.9655, 0.9643]))

ViTC=("ViTC", np.array([0.969, 0.9611, 0.9582, 0.9575, 0.9565, 0.9547, 0.9533, 0.9551, 0.9519, 0.952, 0.9518, 0.9507, 0.9534, 0.9523, 0.9512, 0.9507, 0.9488, 0.948, 0.9489, 0.9525, 0.9516, 0.9468, 0.9603, 0.9489, 0.9468, 0.9503, 0.9459, 0.9496, 0.9484, 0.9467, 0.9471, 0.9464, 0.955, 0.9498, 0.9482, 0.9466, 0.948, 0.952, 0.9478, 0.951, 0.9528, 0.9516, 0.9548, 0.9547, 0.9537, 0.9538, 0.9537, 0.9538, 0.9494, 0.9552, 0.9513, 0.9523]),np.array([0.9693, 0.9634, 0.9619, 0.9588, 0.9586, 0.9568, 0.9551, 0.9543, 0.9535, 0.9521, 0.9541, 0.9511, 0.951, 0.9514, 0.9524, 0.9502, 0.95, 0.9497, 0.9488, 0.949, 0.9511, 0.9492, 0.9495, 0.9519, 0.9492, 0.9489, 0.9495, 0.9494, 0.9495, 0.9477, 0.9476, 0.9472, 0.9477, 0.9495, 0.9491, 0.9496, 0.9478, 0.9499, 0.951, 0.9521, 0.9526, 0.9519, 0.954, 0.9524, 0.9525, 0.9542, 0.9525, 0.9542, 0.953, 0.9518, 0.9515, 0.9557]))

rn_losses = [RNQR, RNS, RNT, RNF, RNQC]

n_losses = [RNN, ViTN]

vit_losses = [ViTT, ViTQR, ViTC]

groups = [rn_losses, vit_losses, n_losses]

colors = ['r', 'g', 'b', 'm', 'y', 'k', 'c']
linestyles = ['solid', 'dashed', 'dotted']

for losses in groups:
    plt.figure(figsize=(10.2, 9))
    for i, loss_info in enumerate(losses):
        model, val_loss, loss = loss_info
        x_values = np.arange(1, len(loss) + 1)

        plt.plot(x_values, loss, linestyle='--', color=colors[i], label=model + " mokymas")
        plt.plot(x_values, val_loss, linestyle='-', color=colors[i], label=model + " validacija")

    font = {'size': 14}
    plt.rc('font', **font)
    plt.xlabel('Epocha')
    plt.ylabel('Nuostolių funckijos reikšmės')

    plt.grid(True)
    plt.legend()
    plt.show()