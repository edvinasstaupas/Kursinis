import numpy as np
import matplotlib.pyplot as plt

recalls_model = np.array([[1.14483333e-02, 5.09350000e-02, 1.07553333e-01]
, [1.14483333e-02, 5.09350000e-02, 1.07553333e-01]
, [1.14483333e-02, 5.09350000e-02, 1.07553333e-01]
, [1.14483333e-02, 5.09350000e-02, 1.07553333e-01]
, [1.14483333e-02, 5.09350000e-02, 1.07553333e-01]
, [1.14483333e-02, 5.09350000e-02, 1.07553333e-01]
, [1.14483333e-02, 5.09350000e-02, 1.07553333e-01]
, [1.14483333e-02, 5.09350000e-02, 1.07553333e-01]
, [1.14483333e-02, 5.09350000e-02, 1.07553333e-01]
, [1.14483333e-02, 5.09350000e-02, 1.07553333e-01]
, [1.14483333e-02, 5.09350000e-02, 1.07553333e-01]
, [1.14483333e-02, 5.09350000e-02, 1.07553333e-01]
, [1.14483333e-02, 5.09350000e-02, 1.07553333e-01]
, [1.14483333e-02, 5.09350000e-02, 1.07553333e-01]
, [1.14483333e-02, 5.09350000e-02, 1.07553333e-01]
, [1.14483333e-02, 5.09350000e-02, 1.07553333e-01]
, [1.14483333e-02, 5.09350000e-02, 1.07553333e-01]
, [1.14483333e-02, 5.09350000e-02, 1.07553333e-01]
, [1.14483333e-02, 5.09350000e-02, 1.07553333e-01]
, [1.14483333e-02, 5.09350000e-02, 1.07553333e-01]
, [1.14483333e-02, 5.09350000e-02, 1.07553333e-01]
, [1.14483333e-02, 5.09350000e-02, 1.07553333e-01]
, [1.14483333e-02, 5.09350000e-02, 1.07551667e-01]
, [1.14483333e-02, 5.09350000e-02, 1.07540000e-01]
, [1.14483333e-02, 5.09350000e-02, 1.07515000e-01]
, [1.14483333e-02, 5.09350000e-02, 1.07441667e-01]
, [1.14483333e-02, 5.09333333e-02, 1.07316667e-01]
, [1.14450000e-02, 5.09133333e-02, 1.07051667e-01]
, [1.14450000e-02, 5.08850000e-02, 1.06523333e-01]
, [1.14400000e-02, 5.08050000e-02, 1.05566667e-01]
, [1.14400000e-02, 5.06833333e-02, 1.04136667e-01]
, [1.14350000e-02, 5.04650000e-02, 1.01913333e-01]
, [1.14166667e-02, 5.00166667e-02, 9.87483333e-02]
, [1.13866667e-02, 4.92333333e-02, 9.45566667e-02]
, [1.13366667e-02, 4.81450000e-02, 8.93016667e-02]
, [1.12200000e-02, 4.65283333e-02, 8.31783333e-02]
, [1.10266667e-02, 4.42050000e-02, 7.58050000e-02]
, [1.07516667e-02, 4.13100000e-02, 6.77300000e-02]
, [1.03400000e-02, 3.77466667e-02, 5.88116667e-02]
, [9.79166667e-03, 3.35766667e-02, 4.95100000e-02]
, [9.04833333e-03, 2.88533333e-02, 3.98500000e-02]
, [8.08833333e-03, 2.36833333e-02, 3.07283333e-02]
, [6.87666667e-03, 1.83100000e-02, 2.22683333e-02]
, [5.60500000e-03, 1.33600000e-02, 1.52966667e-02]
, [4.30833333e-03, 8.95166667e-03, 9.62500000e-03]
, [2.92666667e-03, 5.26833333e-03, 5.46333333e-03]
, [1.72500000e-03, 2.68666667e-03, 2.72666667e-03]
, [8.20000000e-04, 1.12666667e-03, 1.12666667e-03]
, [2.75000000e-04, 3.20000000e-04, 3.20000000e-04]
, [5.83333333e-05, 6.33333333e-05, 6.33333333e-05]
, [6.66666667e-06, 6.66666667e-06, 6.66666667e-06]])


recalls_resnet = np.array([[1.48633333e-02, 5.92100000e-02, 1.08070000e-01], 
[1.48633333e-02, 5.92100000e-02, 1.08070000e-01], 
[1.48633333e-02, 5.92100000e-02, 1.08070000e-01], 
[1.48633333e-02, 5.92100000e-02, 1.08070000e-01], 
[1.48633333e-02, 5.92100000e-02, 1.08070000e-01], 
[1.48633333e-02, 5.92100000e-02, 1.08070000e-01], 
[1.48633333e-02, 5.92100000e-02, 1.08070000e-01], 
[1.48633333e-02, 5.92100000e-02, 1.08070000e-01], 
[1.48633333e-02, 5.92100000e-02, 1.08070000e-01], 
[1.48633333e-02, 5.92100000e-02, 1.08060000e-01], 
[1.48633333e-02, 5.92066667e-02, 1.08018333e-01], 
[1.48616667e-02, 5.91716667e-02, 1.07781667e-01], 
[1.48583333e-02, 5.90866667e-02, 1.07165000e-01], 
[1.48483333e-02, 5.88800000e-02, 1.05638333e-01], 
[1.48183333e-02, 5.83750000e-02, 1.02680000e-01], 
[1.47466667e-02, 5.73416667e-02, 9.81933333e-02], 
[1.46283333e-02, 5.55550000e-02, 9.17000000e-02], 
[1.43716667e-02, 5.29583333e-02, 8.35183333e-02], 
[1.39833333e-02, 4.95166667e-02, 7.39816667e-02], 
[1.34783333e-02, 4.51616667e-02, 6.34300000e-02], 
[1.27633333e-02, 4.01733333e-02, 5.29966667e-02], 
[1.18850000e-02, 3.46766667e-02, 4.30166667e-02], 
[1.08383333e-02, 2.92733333e-02, 3.40983333e-02], 
[9.76500000e-03, 2.41816667e-02, 2.68566667e-02], 
[8.54500000e-03, 1.92133333e-02, 2.05533333e-02], 
[7.36500000e-03, 1.52133333e-02, 1.58750000e-02], 
[6.25333333e-03, 1.19116667e-02, 1.22366667e-02], 
[5.19833333e-03, 9.14833333e-03, 9.32000000e-03], 
[4.28333333e-03, 7.12833333e-03, 7.20666667e-03], 
[3.52666667e-03, 5.53833333e-03, 5.58333333e-03], 
[2.88166667e-03, 4.33666667e-03, 4.35000000e-03], 
[2.28166667e-03, 3.31166667e-03, 3.31333333e-03], 
[1.83333333e-03, 2.55666667e-03, 2.55666667e-03], 
[1.53500000e-03, 2.02666667e-03, 2.02666667e-03], 
[1.19500000e-03, 1.50333333e-03, 1.50333333e-03], 
[8.96666667e-04, 1.07666667e-03, 1.07666667e-03], 
[7.26666667e-04, 8.10000000e-04, 8.10000000e-04], 
[5.88333333e-04, 6.43333333e-04, 6.43333333e-04], 
[4.43333333e-04, 4.76666667e-04, 4.76666667e-04], 
[3.28333333e-04, 3.43333333e-04, 3.43333333e-04], 
[2.43333333e-04, 2.53333333e-04, 2.53333333e-04], 
[1.70000000e-04, 1.73333333e-04, 1.73333333e-04], 
[1.20000000e-04, 1.20000000e-04, 1.20000000e-04], 
[9.00000000e-05, 9.00000000e-05, 9.00000000e-05], 
[5.66666667e-05, 5.66666667e-05, 5.66666667e-05], 
[5.00000000e-05, 5.00000000e-05, 5.00000000e-05], 
[4.33333333e-05, 4.33333333e-05, 4.33333333e-05], 
[2.66666667e-05, 2.66666667e-05, 2.66666667e-05], 
[2.66666667e-05, 2.66666667e-05, 2.66666667e-05], 
[2.66666667e-05, 2.66666667e-05, 2.66666667e-05], 
[3.33333333e-06, 3.33333333e-06, 3.33333333e-06]])

print(recalls_model)
print(recalls_resnet)

# Calculate true positives, false positives, and total positives for various thresholds
num_thresholds = 51  # Adjust the number of thresholds
thresholds = np.linspace(0, 1, num_thresholds)
ks = [1, 10, 50]

colors = ['r', 'g', 'b']
linestyles = ['dashed', (0, (5, 1)), (0, (5, 10)), 'dotted', (0, (1, 1)),(0, (1, 10))]
plt.figure(figsize=(10, 6))
for i, k in enumerate(ks):
    plt.plot(thresholds, recalls_model[:, i], color=colors[i], linestyle=linestyles[i], label=f'Modelio Recall@{k}')
for i, k in enumerate(ks):
    plt.plot(thresholds, recalls_resnet[:, i], color=colors[i], linestyle=linestyles[3+i], label=f'ResNet50 Recall@{k}')
plt.xlabel('Slenkstinė vertė')
plt.ylabel('Metrikos vertė')
plt.legend()
plt.show()